{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalya\\\\OneDrive\\\\Desktop\\\\Social Media\\\\client\\\\src\\\\components\\\\ChatBox\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useState } from 'react';\nimport { getUser } from '../../api/UserRequest';\nimport './ChatBox.css';\nimport { addMessage, getMessages } from '../../api/MessageRequest';\nimport { format } from 'timeago.js';\nimport InputEmoji from 'react-input-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = _ref => {\n  _s();\n  let {\n    chat,\n    currentUser,\n    setSendMessage,\n    receiveMessage\n  } = _ref;\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n  const scroll = useRef();\n  useEffect(() => {\n    if (receiveMessage !== null && receiveMessage.chatId === chat._id) {\n      setMessages([...messages, receiveMessage]);\n    }\n  }, [receiveMessage]);\n\n  //fetching data for header\n  useEffect(() => {\n    var _chat$members;\n    const userId = chat === null || chat === void 0 ? void 0 : (_chat$members = chat.members) === null || _chat$members === void 0 ? void 0 : _chat$members.find(id => id !== currentUser);\n    const getUserData = async () => {\n      try {\n        const {\n          data\n        } = await getUser(userId);\n        setUserData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) getUserData();\n  }, [chat, currentUser]);\n\n  //fetching data for messages\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const {\n          data\n        } = await getMessages(chat._id);\n        setMessages(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) fetchMessages();\n  }, [chat]);\n  const handleChange = newMessage => {\n    setNewMessage(newMessage);\n  };\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderId: currentUser,\n      text: newMessage,\n      chatId: chat._id\n    };\n\n    //send message to database\n    try {\n      const {\n        data\n      } = await addMessage(message);\n      setMessages([...messages, data]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n    //send message to socket server\n\n    const receiverId = chat.members.find(id => id !== currentUser);\n    setSendMessage({\n      ...message,\n      receiverId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox-container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"follower\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData !== null && userData !== void 0 && userData.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : process.env.REACT_APP_PUBLIC_FOLDER + 'defaultProfile.jpeg',\n                alt: \"\",\n                className: \"followerImage\",\n                style: {\n                  width: '50px',\n                  height: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                style: {\n                  fontSize: \"0.8rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [userData === null || userData === void 0 ? void 0 : userData.firstname, userData === null || userData === void 0 ? void 0 : userData.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              width: '85%',\n              border: '0.1px solid #ececec'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              ref: scroll,\n              className: message.senderId === currentUser ? \"message own\" : \"message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: format(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-sender\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputEmoji, {\n            value: newMessage,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" send-button button \",\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatbox-empty-message\",\n        children: \"Tap to start Conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBox, \"QQCqxrhKKcOB68x0Dr6nbENAYWs=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useRef","useState","getUser","addMessage","getMessages","format","InputEmoji","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","_ref","_s","chat","currentUser","setSendMessage","receiveMessage","userData","setUserData","messages","setMessages","newMessage","setNewMessage","scroll","chatId","_id","_chat$members","userId","members","find","id","getUserData","data","error","console","log","fetchMessages","handleChange","handleSend","e","preventDefault","message","senderId","text","receiverId","children","className","src","profilePicture","process","env","REACT_APP_PUBLIC_FOLDER","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","firstname","lastname","border","map","ref","createdAt","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kalya/OneDrive/Desktop/Social Media/client/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\r\nimport { getUser } from '../../api/UserRequest'\r\nimport './ChatBox.css'\r\nimport { addMessage, getMessages } from '../../api/MessageRequest'\r\nimport { format } from 'timeago.js'\r\nimport InputEmoji from 'react-input-emoji';\r\n\r\nconst ChatBox = ({ chat, currentUser, setSendMessage, receiveMessage }) => {\r\n    const [userData, setUserData] = useState(null)\r\n    const [messages, setMessages] = useState([])\r\n    const [newMessage, setNewMessage] = useState(\"\")\r\n    const scroll = useRef()\r\n    useEffect(() => {\r\n        if (receiveMessage !== null && receiveMessage.chatId === chat._id) {\r\n            setMessages([...messages, receiveMessage])\r\n        }\r\n    }, [receiveMessage])\r\n\r\n\r\n\r\n    //fetching data for header\r\n    useEffect(() => {\r\n        const userId = chat?.members?.find((id) => id !== currentUser)\r\n        const getUserData = async () => {\r\n            try {\r\n                const { data } = await getUser(userId)\r\n                setUserData(data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if (chat !== null) getUserData()\r\n    }, [chat, currentUser])\r\n\r\n    //fetching data for messages\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const { data } = await getMessages(chat._id);\r\n                setMessages(data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if (chat !== null) fetchMessages();\r\n    }, [chat]);\r\n\r\n    const handleChange = (newMessage) => {\r\n        setNewMessage(newMessage)\r\n    }\r\n\r\n    const handleSend = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            senderId: currentUser,\r\n            text: newMessage,\r\n            chatId: chat._id,\r\n        }\r\n\r\n        //send message to database\r\n        try {\r\n            const { data } = await addMessage(message);\r\n            setMessages([...messages, data])\r\n            setNewMessage(\"\")\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n        //send message to socket server\r\n\r\n        const receiverId = chat.members.find((id) => id !== currentUser);\r\n        setSendMessage({ ...message, receiverId }\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <>\r\n            <div className='ChatBox-container'>\r\n                {chat ? (<>\r\n                    <div className=\"chat-header\">\r\n                        <div className='follower'>\r\n                            <div>\r\n                                <img src={userData?.profilePicture ?\r\n                                    process.env.REACT_APP_PUBLIC_FOLDER\r\n                                    + userData.profilePicture\r\n                                    : process.env.REACT_APP_PUBLIC_FOLDER + 'defaultProfile.jpeg'} alt=\"\"\r\n                                    className='followerImage'\r\n                                    style={{ width: '50px', height: '50px' }}\r\n                                />\r\n                                <div className='name' style={{ fontSize: \"0.8rem\" }}>\r\n                                    <span>{userData?.firstname}{userData?.lastname}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{ width: '85%', border: '0.1px solid #ececec' }} />\r\n                    </div>\r\n                    {/* chatbox Messages */}\r\n                    <div className='chat-body'>\r\n                        {messages.map((message) => (\r\n                            <>\r\n                                <div ref={scroll}\r\n                                    className={\r\n                                        message.senderId === currentUser ?\r\n                                            \"message own\" : \"message\"}>\r\n                                    <span>\r\n                                        {message.text}\r\n                                    </span>\r\n                                    <span>\r\n                                        {format(message.createdAt)}\r\n                                    </span>\r\n                                </div>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    {/* chat sender */}\r\n                    <div className='chat-sender'>\r\n                        <div>+</div>\r\n                        <InputEmoji\r\n                            value={newMessage}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div className=' send-button button ' onClick={handleSend}>Send</div>\r\n                    </div>\r\n                </>) : (\r\n                    <span className='chatbox-empty-message'>\r\n                        Tap to start Conversation...\r\n                    </span>\r\n                )}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBox"],"mappings":"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"},"metadata":{},"sourceType":"module"}
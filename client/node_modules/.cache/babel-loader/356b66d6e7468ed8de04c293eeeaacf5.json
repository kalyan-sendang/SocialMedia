{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\kalya\\\\OneDrive\\\\Desktop\\\\Social Media\\\\client\\\\src\\\\components\\\\ChatBox\\\\ChatBox.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api/UserRequest';\nimport './ChatBox.css';\nimport { addMessage, getMessages } from '../../api/MessageRequest';\nimport { format } from 'timeago.js';\nimport InputEmoji from 'react-input-emoji';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ChatBox = _ref => {\n  _s();\n  let {\n    chat,\n    currentUser\n  } = _ref;\n  const [userData, setUserData] = useState(null);\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  //fetching data for header\n  useEffect(() => {\n    var _chat$members;\n    const userId = chat === null || chat === void 0 ? void 0 : (_chat$members = chat.members) === null || _chat$members === void 0 ? void 0 : _chat$members.find(id => id !== currentUser);\n    const getUserData = async () => {\n      try {\n        const {\n          data\n        } = await getUser(userId);\n        setUserData(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) getUserData();\n  }, [chat, currentUser]);\n\n  //fetching data for messages\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const {\n          data\n        } = await getMessages(chat._id);\n        setMessages(data);\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    if (chat !== null) fetchMessages();\n  }, [chat]);\n  const handleChange = newMessage => {\n    setNewMessage(newMessage);\n  };\n  const handleSend = async e => {\n    e.preventDefault();\n    const message = {\n      senderId: currentUser,\n      text: newMessage,\n      chatId: chat._id\n    };\n\n    //send message to database\n    try {\n      const {\n        data\n      } = await addMessage(message);\n      setMessages([...messages, data]);\n      setNewMessage(\"\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ChatBox-container\",\n      children: chat ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"follower\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                src: userData !== null && userData !== void 0 && userData.profilePicture ? process.env.REACT_APP_PUBLIC_FOLDER + userData.profilePicture : process.env.REACT_APP_PUBLIC_FOLDER + 'defaultProfile.jpeg',\n                alt: \"\",\n                className: \"followerImage\",\n                style: {\n                  width: '50px',\n                  height: '50px'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"name\",\n                style: {\n                  fontSize: \"0.8rem\"\n                },\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: [userData === null || userData === void 0 ? void 0 : userData.firstname, userData === null || userData === void 0 ? void 0 : userData.lastname]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 76,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n            style: {\n              width: '85%',\n              border: '0.1px solid #ececec'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-body\",\n          children: messages.map(message => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: message.senderId === currentUser ? \"message own\" : \"message\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: message.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: format(message.createdAt)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"chat-sender\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: \"+\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(InputEmoji, {\n            value: newMessage,\n            onChange: handleChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" send-button button \",\n            onClick: handleSend,\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"chatbox-empty-message\",\n        children: \"Tap to start Conversation...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n_s(ChatBox, \"vFYIrp8CgmM+YEa7CAdGnJNoT80=\");\n_c = ChatBox;\nexport default ChatBox;\nvar _c;\n$RefreshReg$(_c, \"ChatBox\");","map":{"version":3,"names":["React","useEffect","useState","getUser","addMessage","getMessages","format","InputEmoji","jsxDEV","_jsxDEV","Fragment","_Fragment","ChatBox","_ref","_s","chat","currentUser","userData","setUserData","messages","setMessages","newMessage","setNewMessage","_chat$members","userId","members","find","id","getUserData","data","error","console","log","fetchMessages","_id","handleChange","handleSend","e","preventDefault","message","senderId","text","chatId","children","className","src","profilePicture","process","env","REACT_APP_PUBLIC_FOLDER","alt","style","width","height","fileName","_jsxFileName","lineNumber","columnNumber","fontSize","firstname","lastname","border","map","createdAt","value","onChange","onClick","_c","$RefreshReg$"],"sources":["C:/Users/kalya/OneDrive/Desktop/Social Media/client/src/components/ChatBox/ChatBox.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { getUser } from '../../api/UserRequest'\r\nimport './ChatBox.css'\r\nimport { addMessage, getMessages } from '../../api/MessageRequest'\r\nimport { format } from 'timeago.js'\r\nimport InputEmoji from 'react-input-emoji';\r\n\r\nconst ChatBox = ({ chat, currentUser }) => {\r\n    const [userData, setUserData] = useState(null)\r\n    const [messages, setMessages] = useState([])\r\n    const [newMessage, setNewMessage] = useState(\"\")\r\n\r\n    //fetching data for header\r\n    useEffect(() => {\r\n        const userId = chat?.members?.find((id) => id !== currentUser)\r\n        const getUserData = async () => {\r\n            try {\r\n                const { data } = await getUser(userId)\r\n                setUserData(data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if (chat !== null) getUserData()\r\n    }, [chat, currentUser])\r\n\r\n    //fetching data for messages\r\n    useEffect(() => {\r\n        const fetchMessages = async () => {\r\n            try {\r\n                const { data } = await getMessages(chat._id);\r\n                setMessages(data)\r\n            } catch (error) {\r\n                console.log(error)\r\n            }\r\n        }\r\n        if (chat !== null) fetchMessages();\r\n    }, [chat]);\r\n\r\n    const handleChange = (newMessage) => {\r\n        setNewMessage(newMessage)\r\n    }\r\n\r\n    const handleSend = async (e) => {\r\n        e.preventDefault();\r\n        const message = {\r\n            senderId: currentUser,\r\n            text: newMessage,\r\n            chatId: chat._id,\r\n        }\r\n\r\n        //send message to database\r\n        try {\r\n            const { data } = await addMessage(message);\r\n            setMessages([...messages, data])\r\n            setNewMessage(\"\")\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className='ChatBox-container'>\r\n                {chat ? (<>\r\n                    <div className=\"chat-header\">\r\n                        <div className='follower'>\r\n                            <div>\r\n                                <img src={userData?.profilePicture ?\r\n                                    process.env.REACT_APP_PUBLIC_FOLDER\r\n                                    + userData.profilePicture\r\n                                    : process.env.REACT_APP_PUBLIC_FOLDER + 'defaultProfile.jpeg'} alt=\"\"\r\n                                    className='followerImage'\r\n                                    style={{ width: '50px', height: '50px' }}\r\n                                />\r\n                                <div className='name' style={{ fontSize: \"0.8rem\" }}>\r\n                                    <span>{userData?.firstname}{userData?.lastname}</span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <hr style={{ width: '85%', border: '0.1px solid #ececec' }} />\r\n                    </div>\r\n                    {/* chatbox Messages */}\r\n                    <div className='chat-body'>\r\n                        {messages.map((message) => (\r\n                            <>\r\n                                <div className={\r\n                                    message.senderId === currentUser ?\r\n                                        \"message own\" : \"message\"}>\r\n                                    <span>\r\n                                        {message.text}\r\n                                    </span>\r\n                                    <span>\r\n                                        {format(message.createdAt)}\r\n                                    </span>\r\n                                </div>\r\n                            </>\r\n                        ))}\r\n                    </div>\r\n                    {/* chat sender */}\r\n                    <div className='chat-sender'>\r\n                        <div>+</div>\r\n                        <InputEmoji\r\n                            value={newMessage}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <div className=' send-button button ' onClick={handleSend}>Send</div>\r\n                    </div>\r\n                </>) : (\r\n                    <span className='chatbox-empty-message'>\r\n                        Tap to start Conversation...\r\n                    </span>\r\n                )}\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ChatBox"],"mappings":"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"},"metadata":{},"sourceType":"module"}